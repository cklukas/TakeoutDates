name: Build and Release

on:
  push:
    tags:
      - 'v*'

env:
  ACTIONS_STEP_DEBUG: true  # Enable verbose logging

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Debug Network Access
      run: |
        echo "Testing access to upload-artifact@v3.2.1"
        curl -I -v https://github.com/actions/upload-artifact/releases/tag/v3.2.1 2>&1 || echo "Failed to reach URL"
        curl -I -v https://github.com/actions/upload-artifact/archive/refs/tags/v3.2.1.tar.gz 2>&1 || echo "Failed to download tarball"

    - name: Install CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd build
        cmake --build . --config Release

    - name: Package
      run: |
        mkdir artifacts
        cp build/google_photos_date_setter${{ matrix.os == 'windows-latest' && '.exe' || '' }} artifacts/
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v3.2.1  # Updated to a valid version
      with:
        name: google_photos_date_setter-${{ matrix.os }}
        path: artifacts/
      env:
        ACTIONS_CACHE_BUSTER: ${{ github.run_id }}  # Bust cache

    - name: Upload Artifact (Fallback)
      if: failure()
      run: |
        echo "Uploading artifact manually"
        tar -czf artifact.tar.gz -C artifacts .
        gh release upload ${{ github.ref_name }} artifact.tar.gz --repo ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          Automated release for ${{ github.ref_name }}.
          Binaries for Ubuntu, macOS, and Windows are attached below.